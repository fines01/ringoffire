@import './src/breakpoints.scss';

.game-container {
    display: flex;
}

.game-field {
    width: calc(100vw - var(--width-sidecontainer)); //65vw;
    height: 100vh;
    max-width: 100%;
    // background-image: url('/assets/img/board.jpg');
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    background-color: aliceblue;
    overflow: hidden;

    @media screen and(max-width: $breakpoint-sm) {
      width: 100vw;
    }
}

.player-field {
    position: fixed;
    overflow: auto;
    // padding: 0 0 1rem 1rem;
    // position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    display: flex;
    overflow-x: hidden;
    z-index: 2;
    
    width: var(--width-sidecontainer);
    max-width: 100%;

    background-color: rgb(103, 58, 183, 0.85);

    @media screen and(max-width: $breakpoint-sm) {
       width: 0;
    }
}

.player-position {
  position: absolute;
  right: 0;
  //top: in html damit variablen aus component.ts übergeben werden können
  z-index: 1;

  &:last-child {
    margin-bottom: 2rem;
  }
}

.card-stack {
    position: relative;
    bottom: 18%;
    left:6%;

    
    
    @media screen and(max-width: $breakpoint-md){
      bottom: 18%;
      left: 0%;
    }
    
    @media screen and(max-width: $breakpoint-mm) {}
    
    @media screen and(max-width: $breakpoint-sm) {}

    @media screen and(max-width: $breakpoint-s) {
      //bottom: 19%;
      left: -5%;
      
      img {
        width: 110px;
      }
    }
    
    @media screen and(max-width: $breakpoint-xs) {
      bottom: 24%;
      left: -10%;
    }

    @media screen and(max-width: $breakpoint-xxs) {
      bottom: 22%;
      left: -15%;
    }

    @media screen and (min-width: $breakpoint-xl) {
      bottom: 14%;
    }

    @media screen and (min-width: $breakpoint-lg){
      bottom: 15%;
    }

    img {
        position: absolute;
        width: 120px;

        @media screen and (min-width: $breakpoint-xl){
          width: 130px;
        }
    }
}

.top-card {
    cursor: pointer;
    transition: all 125ms ease-in-out;
    //transform: translate(120px, 10px) rotate(-10deg); // card screen-s/m/l
    border: 1px solid brown;
    border-radius: 16px;
    //box-shadow: 0 0 6px 2px rgb(0,0,0, 0.5);

    &:hover {
        //transform: scale(1.1) translateY(-10px);
        box-shadow: 0 0 12px 2px rgb(0, 0, 0, 0.5);
    }
}

.card-screen-m {
  transform: translate(120px, 0px) rotate(-10deg);

  &:hover {
    transform: scale(1.1) translate(110px, 0px) rotate(-5deg);
  }
}

.card-screen-l {
  transform: translate(120px, 10px); // rotate(-10deg);

  &:hover {
    transform: scale(1.1) translateY(-10px);
  }
}

.played-card {
    right:25vw; // 300px;
    top: 15vw; //200px;
    // transform: scale(1.2) translateX(-3px) tramslateY(-150px) rotate(-10deg);
    transform: scale(1.2) translate(-3px, -150px) rotate(-10deg);

    @media screen and(max-width: $breakpoint-lg){
      right: 21vw;
      top: 29vw;
    }
    
    @media screen and (max-width: $breakpoint-md) {
      right: 14vw;
      top: 42vw;
    }

    @media screen and (max-width: $breakpoint-mm) {
      right: 8vw;
      top: 49vw;
    }

    @media screen and(max-width: $breakpoint-sm) {
      right: 18vw;
      top: 60vw;
    }
    
    @media screen and(max-width: $breakpoint-s) {
      right: 9vw;
      top: 86vw;
    }

    @media screen and(max-width: $breakpoint-xs) {
      right: 0vw;
      top: 111vw;
    }

    @media screen and(max-width: $breakpoint-xxs) {
      right: -20vw;
      top: 140vw;
    }

}

.picked-card {
    transition: all 125ms ease-in-out;
    animation: pick-card-animation 1s ease-in-out;
    //transform: scale(1.2) translate(-3px, -150px) rotate(-10deg);
    transform: scale(1.1) translate(110px, 0px) rotate(-5deg);

}

.btn-add {
  position: absolute;
  left: 2rem;
  top: 2rem;
}

.info-card {
  position: absolute;
  bottom: 0.5rem;
  left: 0.5rem;
  right: 0.5rem;
}

@keyframes pick-card-animation {

    0% {
        transform: scale(1.1) translate(110px, 0px) rotate(-5deg);
    }

    40% {
        transform: scale(1.7);
    }

    60% {
        transform: scale(1.7);
    }

    100% {
        transform: scale(1.2) translate(-3px, -150px) rotate(-10deg);
    }
}